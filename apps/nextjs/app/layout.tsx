import "@/styles/globals.css";

import { Inter } from "next/font/google";
import { headers } from "next/headers";
import { theme } from "@/config/theme";
import { TRPCReactProvider } from "@/trpc/react";
import { ColorSchemeScript, MantineProvider } from "@mantine/core";
import './layout.css'
import Link from "next/link";
import { Dynamic2 } from "./dinamic";

const inter = Inter({
    subsets: ["latin"],
    variable: "--font-sans",
});

export const metadata = {
    title: "Create T3 App",
    description: "Generated by create-t3-app",
    icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export const dynamic = "force-dynamic";

export default function RootLayout({
    children,
}: {
    children: React.ReactNode;
}) {
    return (
        <html lang="en">
            <head>
                <ColorSchemeScript />
                <link rel="shortcut icon" href="/favicon.ico" />
                <meta
                    name="viewport"
                    content="minimum-scale=1, initial-scale=1, width=device-width, user-scalable=no"
                />
            </head>
            <body className={`font-sans ${inter.variable}`}>
                <TRPCReactProvider headers={headers()}>
                    <MantineProvider theme={theme}>
                        <div className="grid-container">
                            <div className="layMenu">
                                {[...Array(12).keys()].map(num =>
                                    <div key={num}><Link href={`/step/${num}`}>
                                        {`step/${num}`}
                                    </Link></div>
                                )}
                            </div>
                            <div className="layMain">
                            <Dynamic2>{children}</Dynamic2>
                            </div>
                        </div>
                    </MantineProvider>
                </TRPCReactProvider>
            </body>
        </html>
    );
}
